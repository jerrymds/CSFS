@using System.Web.Mvc.Html;
@using System.Web.Mvc;
@using CTBC.CSFS.Models;
@model CTBC.CSFS.Models.CaseRecordCondition
@{
    ViewBag.Title = " 死亡案件交易紀錄";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="box box-primary">
    <div class="box-header">
        <i class="glyphicon glyphicon-search"></i>
        <h3 class="box-title">@Lang.csfs_query</h3>
    </div><!-- /.box-header -->
    <!-- form start -->
    @using (Html.BeginForm("_QueryResult", "DeadRecord", new { area = "TrsDetail" }, FormMethod.Post, new { id = "frmQuery", @class = "form-horizontal" }))
    {
        <div class="box-body ">
            <table class="table-noborder">
                <tbody>
                    <tr>
                        <td class="text-right" width="20%">
                            建檔日期：起日
                        </td> 
                        <td class="text-left" width="20%">
                            @Html.TextBoxFor(m => m.ForCDateS, new { data_datepicker = "true" })
                        </td>
                        <td class="text-right" width="6%">                            
                            迄日
                        </td>
                        <td class="text-left" width="20%">
                            @Html.TextBoxFor(m => m.ForCDateE, new { data_datepicker = "true" })
                        </td>
                        <td class="text-right" width="12%">
                            案件編號
                        </td>
                        <td td class="text-left" width="35%">
                            @Html.TextBoxFor(m => m.DocNo, new { @MaxLength = "15" })
                        </td>
                    </tr>
                    <tr>
                        <td class="text-right" width="10%">                    
                            客戶ID
                        </td>
                        <td class="text-left" width="20%">
                            @Html.TextBoxFor(m => m.HeirId, new { @MaxLength = "11" })
                        </td>
                        <td class="text-right" width="10%">
                            理債檔
                        </td> 
                         <td class="text-right" width="20%">
                        <input type="file" class="col-sm-12 no-padding" name="fileAttNames" id="fileAtt1" />
                         </td>
                     </tr>
                     <tr>
                        <td class="text-right">@Lang.csfs_agnet</td>
                        <td class="text-left" width="20%" colspan="3">
                            @if (ViewBag.IsBranchDirector == "0")
                            {
                                @Html.DropDownListFor(m => m.AgentDepartment, (IEnumerable<SelectListItem>)ViewBag.AgentDepartmentList, Lang.csfs_select, new { @id = "ddlAgentDepartment" })
                            }
                            @Html.DropDownListFor(m => m.AgentDepartment2, (IEnumerable<SelectListItem>)ViewBag.AgentDepartment2List, Lang.csfs_select, new { @id = "ddlAgentDepartment2" })
                            @Html.DropDownListFor(m => m.AgentDepartmentUser, (IEnumerable<SelectListItem>)ViewBag.AgentDepartmentUserList, Lang.csfs_select, new { @id = "ddlAgentDepartmentUser" })
                         </td>
                         <td class="text-left" width="1%"> </td>
                         <td class="text-left" width="20%"> </td>   
                         <td class="text-left" width="1%"> </td>
                         <td class="text-left" width="20%"></td>
                    </tr>   
                </tbody>
            </table>

</div><!-- /.box-body -->
        <input type="hidden" id="pageNum" name="pageNum" />
        <div class="box-footer text-center">
            <button id="btnQuery" type="button" class="btn btn-primary btn-xs">@Lang.csfs_query</button>            
            <button id="btnCancel" type="reset" class="btn btn-default btn-xs">@Lang.csfs_cancel</button>
            <button id="btnDelete" type="button" class="btn btn-primary btn-xs" onclick="Delete();">刪除</button>
            <button id="btnUpload" type="button" class="btn btn-primary btn-xs" onclick="Upload();">啟動</button>
        </div>

    }
</div>

<div id="divResult" class="table-wrap" data-target-url="@Url.Action("_QueryResult", "DeadRecord", new { area = "TrsDetail" })">
</div>


@Html.Hidden("PleaseSelect", Lang.csfs_select)
@Html.Hidden("isQuery", (string)ViewBag.isQuery)
@Html.Hidden("CurrentPage", (string)ViewBag.CurrentPage)
@Html.Hidden("SelectOneMsg", Lang.csfs_select_one)
@Html.Hidden("AgentDepartment2Query", (string)ViewBag.AgentDepartment2Query)
@Html.Hidden("AgentDepartmentUserQuery", (string)ViewBag.AgentDepartmentUserQuery)
@Html.HiddenFor(m => m.IsEnable, new { id = "hidIsEnable" })
@* 20170630 緊急 RQ-2015-019666-018 派件至跨單位 宏祥 add start *@
@Html.Hidden("IsBranchDirector", (string)ViewBag.IsBranchDirector)
@Html.Hidden("GetAgentDepartment2Url", Url.Action("ChangAgentDepartment1", "CollectionToAgent", new { area = "Collection" }))
@Html.Hidden("GetAgentDepartmentUserUrl", Url.Action("ChangAgentDepartment2", "CollectionToAgent", new { area = "Collection" }))
@Html.Hidden("DeleteTrsUrl", Url.Action("Delete", "DeadRecord", new { area = "TrsDetail" }))
@Html.Hidden("EditTrsUrl", Url.Action("Edit", "DeadRecord", new { area = "TrsDetail" }))
@Html.Hidden("UploadTrsUrl", Url.Action("DetailExport", "DeadRecord", new { area = "TrsDetail", enctype = "multipart/form-data", target = "upload_frame" }))
@* 20170630 緊急 RQ-2015-019666-018 派件至跨單位 宏祥 add end *@
<script src="~/Scripts/jquery-2.1.3.js"></script>
<script src="~/Scripts/json2.js"></script>
<script type="text/javascript">

    $(document).ready(function () {
        // 按鈕事件註冊
        $("#btnQuery").click(function () { QueryData(); });
        $("#frmQuery").submit(function () { QueryData(); });
        $("#btnCancel").click(function () { Cancel(); });

        $("#ddlAgentDepartment").change(function () { changeAgentDepartment(); });
        $("#ddlAgentDepartment2").change(function () { changeAgentDepartment2(); });
        if ($("#isQuery").val() == "1") {
            $("#pageNum").val(parseInt($("#CurrentPage").val()));
            QueryData();
        }
    });

    // checkbox點擊事件
    function ChildItem() {
        // 選中個數
        var chkResult = 0;
        $(".checkfile").each(function () {
            if ($(this).prop("checked") == true) {
                chkResult++;
            }
        });

        if (chkResult == $(".checkfile").length) {
            $("#check01").prop("checked", "checked");
        } else {
            $("#check01").removeAttr("checked");
        }
    }
    // 查詢
    function QueryData() {
        if (CheckData()) {
            $("#divResult").html("");

            $.blockUI();
            $.ajax({
                url: $("#frmQuery").attr("action"),
                type: "Post",
                cache: false,
                data: $("#frmQuery").serialize(),
                error: function () {
                    jAlertError($("#LoadErrorMsg").val());
                    $.unblockUI();
                },
                success: function (data) {
                    $("#divResult").html(data).show();
                    $.unblockUI();
                    $("#fileAtt1").val("");
                    $("#querystring").val($("#frmQuery").serialize());
                }
            });
            return false;
        }
    }

    // 欄位檢核
    function CheckData() {
        var msg = "";
        trimAllInput();

        // 查詢範圍
        var CloseDateMsg = CheckDate($("#ForCDateS").val(), $("#ForCDateE").val(), "查詢區間")
        if (CloseDateMsg != "") {
            msg += CloseDateMsg;
        }

        if (msg == "") {
            return true;
        } else {
            jAlertError(msg);

            return false;
        }
    }

    // 日期檢核
    function CheckDate(startDate, endDate, alertMsg) {
        var msg = "";

        if (startDate != "" && endDate != "") {
            startDate = ChangeDate(startDate);
            endDate = ChangeDate(endDate);

            if (new Date(startDate) > new Date(endDate)) {
                msg = alertMsg + "起日不得大於迄日!\r\n";
            }
        }

        return msg;
    }

    // 轉換成西元年
    function ChangeDate(strDate) {
        // 截取年份
        var pYear = strDate.substring(0, strDate.indexOf('/'));

        // 截取月份和天
        var pMonthDay = strDate.substring(strDate.indexOf('/'), strDate.length);

        // 年份+1991
        if (parseInt(pYear) <= 200) {
            pYear = parseInt(pYear) + 1911;
        }

        return pYear + "/" + pMonthDay;
    }

    //* 點選取消
    function Cancel() {
        $("#divResult").html("");
        $("#TITLE").val("");
        $("#md_FuncID").val("");
    }

    // 刪除
    function Delete() {
        var pMsg = "";
        var checkKey = new Array();
        var strDate = "";
        $(".checkfile:checked").each(function () {
            strDate = $(this).attr("data-CreatedDate");
            checkKey.push($(this).attr("data-Version") + "|" + strDate);//向数组中添加元素
        });

        var strVersionKey = checkKey.join(',');

        if (strVersionKey.length <= 0) {
            jAlertError($("#SelectOneMsg").val());
            return;
        } else if (pMsg != "") {
            alert(pMsg);
            return;
        } else {
            jConfirm("您確定要刪除嗎?", $("#j_confirm_header").val(), function (bFlag) {
                if (bFlag === true) {
                    $.blockUI();

                    // 刪除
                    $.ajax({
                        url: $("#DeleteTrsUrl").val(),
                        type: "Post",
                        cache: false,
                        data: { Content: strVersionKey },
                        success: function (data) {
                            $.unblockUI();

                            if (data) {
                                alert("刪除成功!");

                                // 刷新清單
                                QueryData();

                            } else {
                                alert("刪除失敗!");
                            }
                        }
                    });
                }
            })
        }
    }
    function Edit() {
        var pMsg = "";
        var strDocno = "";
        var chkResult = 0;
        $(".checkfile").each(function () {
            if ($(this).prop("checked") == true) {
                chkResult++;
            }
        });
        if (chkResult > 1) {
            jAlertError("只能勾選一筆啟動");
            return;
        }
        $(".checkfile:checked").each(function () {
            strDocno = $(this).attr("data-docno");
        });


        if (strDocno.length <= 0) {
            jAlertError($("#SelectOneMsg").val());
            return;
        } else if (pMsg != "") {
            alert(pMsg);
            return;
        } else {
            //jConfirm("您確定要啟動嗎?", $("#j_confirm_header").val(), function (bFlag)
              {
                if (true) //bFlag === true
                {
                    $.blockUI();

                    // 啟動
                    $.ajax({
                        url: $("#EditTrsUrl").val(),
                        type: "Post",
                        cache: false,
                        data: { Content: strDocno },
                        success: function (data) {
                            $.unblockUI();

                            if (data) {
                                alert("啟動成功!");

                                // 刷新清單
                                QueryData();

                            } else {
                                alert("啟動失敗!");
                            }
                        }
                    });
                }
              }
           //)
        }
    }
    function Upload() {
         //當前登錄者是否可以重查
        //if ($("#hidIsEnable").val() != "Y") {
        //    alert("當前登錄者沒有啟動發查權限");
        //    return;
        //}
        var fileData = new FormData();
        var pMsg = "";
        var ReTry = "";
        var strDocno = "";
        var strCaseTrsNewID = "";
        var chkResult = 0;
        $(".checkfile").each(function () {
            if ($(this).prop("checked") == true) {
                chkResult++;
            }
        });
        if (chkResult > 1) {
            jAlertError("只能勾選一筆啟動");
            return;
        }
        $(".checkfile:checked").each(function () {
            strDocno = $(this).attr("data-docno");
            //var files = $("#fileAtt1").get(0).files;
            //if (files.length > 0) {
            //    data2.append("fileAttNames", files[0]);
            //}
            var fileUpload = $("#fileAtt1").get(0);  
            var files = fileUpload.files;  

            // Create FormData object  


            // Looping over all files and add it to FormData object  
            for (var i = 0; i < files.length; i++) {  
                fileData.append(files[i].name, files[i]);  
            }  

            // Adding one more key to FormData object  
            fileData.append('Docno', strDocno);
            fileData.append('ReTry', ReTry);
        });


        if (strDocno.length <= 0) {
            jAlertError($("#SelectOneMsg").val());
            return;
        } else if (pMsg != "") {
            alert(pMsg);
            return;
        } else {
            //jConfirm("確定要啟動嗎?", $("#j_confirm_header").val(), function (bFlag)
            //{
                if (true) {
                    $.blockUI();
                    // 啟動
                    $.ajax({
                        url: $("#UploadTrsUrl").val(),
                        type: "Post",
                        cache: false,
                        contentType: false, // Not to set any content header  
                        processData: false, // Not to process data  
                        data: fileData,
                        error: function () {
                            alert("啟動失敗!!");
                            $.unblockUI();
                        },
                        success: function (data) {
                            $.unblockUI();
                            if (data.ReturnCode == "1") {
                                    alert("啟動成功!");
                                    QueryData();                               
                            } else if (data.ReturnCode == "0") {
                                alert("啟動失敗!!");
                                QueryData();
                            } else {
                                jConfirm(data.ReturnCode, $("#j_confirm_header").val(), function (bFlag) {
                                    if (bFlag === true) {
                                        ReTry = "Y";
                                        fileData.append('ReTry', ReTry);
                                        $.blockUI();
                                        // 啟動
                                        $.ajax({
                                            url: $("#UploadTrsUrl").val(),
                                            type: "Post",
                                            cache: false,
                                            contentType: false, // Not to set any content header  
                                            processData: false, // Not to process data  
                                            data: fileData,
                                            error: function () {
                                                alert("啟動失敗!!");
                                                $.unblockUI();
                                            },
                                            success: function (data) {
                                                $.unblockUI();
                                                if (data.ReturnCode == "1") {
                                                    alert("啟動成功!");
                                                    ReTry = "";
                                                    QueryData();
                                                } else if (data.ReturnCode == "0") {
                                                    alert("啟動失敗!!");
                                                    ReTry = "";
                                                    QueryData();
                                                } else {
                                                    alert("啟動失敗!!");
                                                    ReTry = "";
                                                    QueryData();
                                                }
                                            }
                                        });
                                    }
                                }
                                )
                            }
                        }
                    });
                }
            //}
            //)
        }
    }
    // 全選
    function ChkAll() {

        if ($("#check01").prop("checked") == true) {
            $(".checkfile").prop("checked", "checked");
        } else {
            $(".checkfile").removeAttr("checked");
        }
    }

    // checkbox點擊事件
    function ChildItem() {
        // 選中個數
        var chkResult = 0;
        $(".checkfile").each(function () {
            if ($(this).prop("checked") == true) {
                chkResult++;
            }
        });

        if (chkResult == $(".checkfile").length) {
            $("#check01").prop("checked", "checked");
        } else {
            $("#check01").removeAttr("checked");
        }
    }

    function trimAllInput() {
        $(":input[type='text']").each(function () {
            $(this).val($.trim($(this).val()));
        });
    }

    // 開窗
    function ShowEdit(pID) {
        var url = $("#GetEdit").val();

        // 開窗
        var wd = window.showModalDialog(url + "?pKey=" + pID + "&pFlag='2'", 'window', 'dialogHeight : 300px; dialogWidth :550px; left :" + iLeft + ";top:"+iTop+";status:no');

        if (wd == "ok") {
            // 刷新清單資料
            QueryData();
        }
    }

    //* 經辦人員下拉(處)
    function changeAgentDepartment() {
        try {
            $("#ddlAgentDepartmentUser").attr("disabled", "true");
            $("#ddlAgentDepartmentUser").empty();
            $("#ddlAgentDepartmentUser").append($("<option></option>").val('').text($("#PleaseSelect").val()));
            var selectedValue = $("#ddlAgentDepartment option:selected").val();
            if (selectedValue === "") {
                $("#ddlAgentDepartment2").attr("disabled", "true");
                $("#ddlAgentDepartment2").empty();
                $("#ddlAgentDepartment2").append($("<option></option>").val("").text($("#PleaseSelect").val()));
            } else {
                if ($.trim(selectedValue).length > 0) {
                    $.ajax({
                        type: "POST",
                        async: false,
                        url: $("#GetAgentDepartment2Url").val(),
                        data: { AgentDepartment: selectedValue },
                        success: function (data) {
                            if (data.length > 0) {
                                $("#ddlAgentDepartment2").removeAttr("disabled");
                                $("#ddlAgentDepartment2").empty();
                                $("#ddlAgentDepartment2").append($("<option></option>").val('').text($("#PleaseSelect").val()));
                                $.each(data, function (i, item) {
                                    $("#ddlAgentDepartment2").append($("<option></option>").val(item.Value).text(item.Value));
                                });
                            } else {
                                $("#ddlAgentDepartment2").attr("disabled", "true");
                                $("#ddlAgentDepartment2").empty();
                                $("#ddlAgentDepartment2").append($("<option></option>").val('').text($("#PleaseSelect").val()));
                            }
                        }
                    });
                }
            }
        }
        catch (e) {
        }
    }
    //* 經辦人員下拉(科組)
    function changeAgentDepartment2() {
        try {
            //20171103 RC RQ-2015-019666-003 系統功能修正 宏祥 update start
            //if ($("#IsBranchDirector").val() == "0") {
            var selectedValue = $("#ddlAgentDepartment2 option:selected").val();
            if (selectedValue === "") {
                $("#ddlAgentDepartmentUser").attr("disabled", "true");
                $("#ddlAgentDepartmentUser").empty();
                $("#ddlAgentDepartmentUser").append($("<option></option>").val("").text($("#PleaseSelect").val()));
            } else {
                if ($.trim(selectedValue).length > 0) {
                    $.ajax({
                        type: "POST",
                        async: false,
                        url: $("#GetAgentDepartmentUserUrl").val(),
                        data: { AgentDepartment: selectedValue },
                        success: function (data) {
                            if (data.length > 0) {
                                $("#ddlAgentDepartmentUser").removeAttr("disabled");
                                $("#ddlAgentDepartmentUser").empty();
                                $("#ddlAgentDepartmentUser").append($("<option></option>").val('').text($("#PleaseSelect").val()));
                                $.each(data, function (i, item) {
                                    $("#ddlAgentDepartmentUser").append($("<option></option>").val(item.Value).text(item.Value));
                                });
                            } else {
                                $("#ddlAgentDepartmentUser").attr("disabled", "true");
                                $("#ddlAgentDepartmentUser").empty();
                                $("#ddlAgentDepartmentUser").append($("<option></option>").val('').text($("#PleaseSelect").val()));
                            }
                        }
                    });
                }
            }

        }
        catch (e) {
        }
    }

    // 匯出
    function Export() {
        var ExJson =
               {
                   DocNo: [],
                   DocNo1: []
               }

        var checkKey = new Array();
        $(".checkfile:checked").each(function () {
            checkKey.push($(this).val());//向数组中添加元素
            ExJson.DocNo.push($(this).val());
            ExJson.DocNo1.push($(this).val());
        });

        var strCaseId = checkKey.join(',');

        if (strCaseId.length <= 0) {
            jAlertError($("#SelectOneMsg").val());
            return;
        }

        $("#hidCheckedData").val(strCaseId);
        $("#hidCheckedDatas").val(JSON.stringify(ExJson));
        $("#frmExport").submit();
    }

    // 重查
    function SearchAgainCheck() {
        // 當前登錄者是否可以重查
        if ($("#hidIsEnable").val() != "Y") {
            alert("當前登錄者沒有重查的權限");

            return;
        }

        // 聲明案件編號&版本號&案件狀態&案件筆數變量
        var checkDocNo = new Array();
        var checkVersion = new Array();
        var checkCaseStatus = new Array();
        var checkCountDocNo = new Array();

        $(".checkfile:checked").each(function () {
            // 獲取序號
            var pNum = $(this).attr("data-Num");

            // 案件編號&版本號&案件狀態賦值
            checkDocNo.push($("#hidDocNo_" + pNum).val());
            checkVersion.push($("#hidVersion_" + pNum).val());
            checkCaseStatus.push($(this).attr("data-CaseStatus"));
            checkCountDocNo.push($("#hidCountDocNo_" + pNum).val());
        });

        // 案件編號&版本號&案件狀態&案件筆數增加“，”
        var pDocNo = checkDocNo.join(',');
        var pVersion = checkVersion.join(',');
        var pCaseStatus = checkCaseStatus.join(',');
        var pCountDocNo = checkCountDocNo.join(',');

        // 判斷是否勾選值
        if (pDocNo.length <= 0) {
            jAlertError($("#SelectOneMsg").val());
            return;
        } else {
            // 檢核是否符合重查標準
            $.ajax({
                type: "POST",
                async: false,
                url: $("#hidSearchAgainCheck").val(),
                data: {
                    pDocNo: pDocNo,
                    pVersion: pVersion,
                    pCaseStatus: pCaseStatus,
                    pCountDocNo: pCountDocNo
                },
                success: function (data) {
                    if (data == "") {
                        SearchAgain(pDocNo, pVersion, pCaseStatus, pCountDocNo);
                    } else {
                        alert(data);
                    }
                }
            });
        }
    }

    // 重查
    function SearchAgain(pDocNo, pVersion, pCaseStatus, pCountDocNo) {
        // 檢核是否符合重查標準
        $.ajax({
            type: "POST",
            async: false,
            url: $("#hidSearchAgain").val(),
            data: {
                pDocNo: pDocNo,
                pVersion: pVersion,
                pCaseStatus: pCaseStatus,
                pCountDocNo: pCountDocNo
            },
            success: function (data) {
                if (data) {
                    alert("重查成功");

                    // 刷新清單
                    QueryData();
                } else {
                    alert("重查失敗");
                }
            }
        });
    }
</script>
