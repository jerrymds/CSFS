@model CTBC.CSFS.Models.HistoryQuery
@{
    ViewBag.Title = Lang.csfs_menu_History_Query;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="box box-primary">
    <div class="box-header">
        <i class="glyphicon glyphicon-search"></i>
        <h3 class="box-title">@Lang.csfs_query</h3>
    </div>
    @using (Html.BeginForm("_QueryResult", "HistoryQuery", new { area = "QueryAndExport" }, FormMethod.Post, new { id = "frmQuery", @class = "form-horizontal" }))
    {
        <div class="box-body ">
            <table class="table-noborder">
                <tbody>
                    <tr>
                        <td class="col-md-1 text-right">@Lang.csfs_case_kind</td>
                        <td class="col-md-5" colspan="5">
                            @Html.DropDownListFor(m => m.CaseKind, (IEnumerable<SelectListItem>)ViewBag.CaseKindList, Lang.csfs_select, new { @id = "ddlCaseKind" })
                            @Html.DropDownListFor(m => m.CaseKind2, (IEnumerable<SelectListItem>)ViewBag.CaseKind2List, Lang.csfs_select, new { @id = "ddlCaseKind2" })
                            @Lang.csfs_sendkind
                            @Html.DropDownListFor(m => m.SendKind, (IEnumerable<SelectListItem>)ViewBag.SendKindList, Lang.csfs_bqf, new { @id = "ddlSendKind" })
                        </td>
                    </tr>
                    <tr>
                        @* 請使用 col-md-數字來設定寬度 一行總和為12 *@
                        <td class="col-md-1 text-right">@Lang.csfs_gov_unit</td>
                        <td class="col-md-5">
                            @*@Html.DropDownListFor(m => m.GovKind, (IEnumerable<SelectListItem>)ViewBag.GOV_KINDList, Lang.csfs_select, new { @id = "ddlGOV_KIND" })*@
                            @Html.TextBoxFor(m => m.GovUnit, new { @id = "txtGovUnit", @MaxLength = "200" })
                        </td>
                        <td class="col-md-1 text-right">@Lang.csfs_case_no</td>
                        <td class="col-md-5" colspan="3">
                            @Html.TextBoxFor(m => m.CaseNo, new { @id = "txtCaseNo" })
                        </td>

                    </tr>
                    <tr>
                        <td class="col-md-1 text-right">@Lang.csfs_gov_date</td>
                        <td class="col-md-5">
                            @Html.TextBoxFor(m => m.GovDateS, new { data_datepicker = "true", @Maxlength = "9", @id = "txtGovDateS" })
                            ～
                            @Html.TextBoxFor(m => m.GovDateE, new { data_datepicker = "true", @Maxlength = "9", @id = "txtGovDateE" })
                        </td>
                        <td class="col-md-1 text-right">@Lang.csfs_case_speed</td>
                        <td class="col-md-2">
                            @Html.DropDownListFor(m => m.Speed, (IEnumerable<SelectListItem>)ViewBag.SpeedList, Lang.csfs_select, new { @id = "ddlSpeed" })
                        </td>
                        <td class="col-md-1 text-right">@Lang.csfs_receive_kind</td>
                        <td class="col-md-2">
                            @Html.DropDownListFor(m => m.ReceiveKind, (IEnumerable<SelectListItem>)ViewBag.ReceiveKindList, Lang.csfs_select, new { @id = "ddlReceiveKind" })
                        </td>
                    </tr>
                    <tr>
                        <td class="col-md-1 text-right">@Lang.csfs_gov_no</td>
                        <td class="col-md-5">@Html.TextBoxFor(m => m.GovNo, new { @MaxLength = "100", @id = "txtGovNo" })</td>
                        <td class="col-md-1 text-right">RM</td>
                        <td class="col-md-2">@Html.DropDownListFor(m => m.RMType, (IEnumerable<SelectListItem>)ViewBag.RMTypeList, new { @id = "ddlRMType"})</td>
                        <td class="col-md-1 text-right"></td>
                        <td class="col-md-2"></td>
                    </tr>
                    <tr>
                        <td class="col-md-1 text-right">@Lang.csfs_keyin_date</td>
                        <td class="col-md-5">
                            @Html.TextBoxFor(m => m.CreatedDateS, new { data_datepicker = "true", @Maxlength = "9", @id = "txtCreatedDateS" })
                            ～
                            @Html.TextBoxFor(m => m.CreatedDateE, new { data_datepicker = "true", @Maxlength = "9", @id = "txtCreatedDateE" })
                        </td>
                        <td class="col-md-1 text-right">@Lang.csfs_case_unit</td>
                        <td class="col-md-2">
                            @(ViewBag.UnitRead == "1" ? Html.TextBoxFor(m => m.Unit, new { @id = "txtUnit", @readonly = "readonly" }) : Html.TextBoxFor(m => m.Unit, new { @MaxLength = "100", @id = "txtUnit" }))
                        </td>
                        <td class="col-md-1 text-right">@Lang.csfs_keyin_person</td>
                        <td class="col-md-2">
                            @Html.TextBoxFor(m => m.CreateUser, new { @MaxLength = "100", @id = "txtCreateUser" })
                        </td>
                    </tr>
                    <tr>
                        <td class="col-md-1 text-right">@Lang.csfs_clientID</td>
                        <td class="col-md-2">
                            @Html.TextBoxFor(m => m.ObligorNo, new { @id = "txtObligorNo" })
                        </td>
                        <td class="col-md-1 text-right">@Lang.csfs_clientName</td>
                        <td class="col-md-2">
                            @Html.TextBoxFor(m => m.ObligorName, new { @id = "txtObligorName" })
                        </td>
                    </tr>
                    <tr>
                        <td class="col-md-1 text-right">@Lang.csfs_senddate</td>
                        <td class="col-md-5">
                            @Html.TextBoxFor(m => m.SendDateS, new { data_datepicker = "true", @Maxlength = "9", @id = "txtSendDateS" })
                            ～
                            @Html.TextBoxFor(m => m.SendDateE, new { data_datepicker = "true", @Maxlength = "9", @id = "txtSendDateE" })
                        </td>
                        <td class="col-md-1 text-right">@Lang.csfs_sendword1</td>
                        <td class="col-md-2">
                            @Html.TextBoxFor(m => m.SendNo, new { @id = "txtSendNo" })
                        </td>
                    </tr>
                    <tr>
                        <td class="col-md-1 text-right">@Lang.csfs_closeddate</td>
                        <td class="col-md-5">
                            @Html.TextBoxFor(m => m.OverDateS, new { data_datepicker = "true", @Maxlength = "9", @id = "txtOverDateS" })
                            ～
                            @Html.TextBoxFor(m => m.OverDateE, new { data_datepicker = "true", @Maxlength = "9", @id = "txtOverDateE" })
                        </td>
                        <td class="col-md-1 text-right">@Lang.csfs_case_status</td>
                        <td class="col-md-2">
                            @Html.DropDownListFor(m => m.Status, (IEnumerable<SelectListItem>)ViewBag.StatusName, Lang.csfs_select, new { @id = "ddlStatus" })
                        </td>
                    </tr>
                    <tr>
                        <td class="col-md-1 text-right">@Lang.csfs_agnet</td>
                        <td class="col-md-2">
                            @*20170630 緊急 RQ-2015-019666-018 派件至跨單位 宏祥 update start*@
                            @*@Html.TextBoxFor(m => m.AgentUser, new { })*@
                            @*@Html.DropDownListFor(m => m.AgentUser, (IEnumerable<SelectListItem>)ViewBag.AgentUserList, Lang.csfs_select, new { @id = "ddlAgentUser" })*@
                            @if (ViewBag.IsBranchDirector == "0")
                            {
                                @Html.DropDownListFor(m => m.AgentDepartment, (IEnumerable<SelectListItem>)ViewBag.AgentDepartmentList, Lang.csfs_select, new { @id = "ddlAgentDepartment" })
                            }
                            @Html.DropDownListFor(m => m.AgentDepartment2, (IEnumerable<SelectListItem>)ViewBag.AgentDepartment2List, Lang.csfs_select, new { @id = "ddlAgentDepartment2" })
                            @Html.DropDownListFor(m => m.AgentDepartmentUser, (IEnumerable<SelectListItem>)ViewBag.AgentDepartmentUserList, Lang.csfs_select, new { @id = "ddlAgentDepartmentUser" })
                            @*20170630 緊急 RQ-2015-019666-018 派件至跨單位 宏祥 update end*@
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <input type="hidden" id="pageNum" name="pageNum" />
        <div class="box-footer text-center">
            <button id="btnQuery" type="button" class="btn btn-primary btn-xs">@Lang.csfs_query</button>
            <button id="btnCancel" type="reset" class="btn btn-default btn-xs">@Lang.csfs_cancel</button>

            @*@if (ViewBag.CanExport == "1")
            {
                <button id="btnRemittancer" type="button" class="btn btn-primary btn-xs">@Lang.csfs_debtexcel</button>
                <button id="btnExportlist" type="button" class="btn btn-primary btn-xs">@Lang.csfs_export_receivelist</button>
            }*@
        </div>
    }
</div>

@*@using (Html.BeginForm("BuildSimpleExcel", "HistoryQuery", new { area = "QueryAndExport" }, FormMethod.Post, new { id = "HistoryQuery", @class = "form-horizontal" }))
{
    <input type="hidden" id="hidGovDates" name="CreatedDateS" />
    <input type="hidden" id="hidGovDatee" name="CreatedDateE" />
    <input type="hidden" value="" id="hidderid" name="CaseIdarr" />
    <input type="hidden" value="0" id="hiddenVal" name="hiddenVal" />
}*@
<div id="divResult" class="table-wrap" data-target-url="@Url.Action("_QueryResult", "HistoryQuery", new { area = "QueryAndExport" })">
</div>

<div class="modal fade" id="modalUnits" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">@Lang.csfs_query</h4>
            </div>
            <div class="modal-body">
                <table class="table-noborder col-md-12">
                    <tbody>
                        <tr>
                            <td class="col-md-2 text-right">@Lang.csfs_gov_unit</td>
                            <td class="col-md-10" colspan="5">
                                @Html.DropDownList("ddlGOV_KIND", (IEnumerable<SelectListItem>)ViewBag.GOV_KINDList, Lang.csfs_select, new { @id = "ddlGOV_KIND" })
                                <select id="ddlGovUnit" name="GovUnit">
                                    <option value="">@Lang.csfs_select</option>
                                </select>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnSelectGovUnit">@Lang.csfs_btnconfirmOk</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">@Lang.csfs_cancel</button>
            </div>
        </div>
    </div>
</div>
@Html.Hidden("PlzCorrectFormat", Lang.csfs_enter_correct_format)
@Html.Hidden("GovDateText", Lang.csfs_gov_date)
@Html.Hidden("CreatedDateText", Lang.csfs_keyin_date)
@Html.Hidden("GetCaseKind2Url", Url.Action("ChangCaseKind1", "AgentToHandle", new { area = "Agent" }))
@*@Html.Hidden("GetGovUnitUrl", Url.Action("ChangGovUnit", "CollectionToAssignment", new { area = "Collection" }))*@
@Html.Hidden("AssignChenHe", Url.Action("ChenHe", "AgentToHandle", new { area = "Agent" }))
@Html.Hidden("HistoryQueryRemittancer", Url.Action("BuildSimpleExcel", "HistoryQuery", new { area = "QueryAndExport" }))
@Html.Hidden("NuclearConfirmMsg", Lang.csfs_confirm_export)
@Html.Hidden("NuclearFaileMsg", Lang.csfs_nuclear_fail)
@Html.Hidden("ReturnfirmMsg", Lang.csfs_confirm_approve)
@Html.Hidden("ReturnFaileMsg", Lang.csfs_approve_fail)
@Html.Hidden("SelectOneMsg", Lang.csfs_select_one)
@Html.Hidden("PleaseSelect", Lang.csfs_select)
@Html.Hidden("isQuery", (string)ViewBag.isQuery)
@Html.Hidden("CaseKind2Query", (string)ViewBag.CaseKind2Query)
@Html.Hidden("CurrentPage", (string)ViewBag.CurrentPage)
@Html.Hidden("AgentDepartment2Query", (string)ViewBag.AgentDepartment2Query)
@Html.Hidden("AgentDepartmentUserQuery", (string)ViewBag.AgentDepartmentUserQuery)
@Html.Hidden("IsBranchDirector", (string)ViewBag.IsBranchDirector)
@Html.Hidden("GetAgentDepartment2Url", Url.Action("ChangAgentDepartment1", "CollectionToAgent", new { area = "Collection" }))
@Html.Hidden("GetAgentDepartmentUserUrl", Url.Action("ChangAgentDepartment2", "CollectionToAgent", new { area = "Collection" }))
@section scripts {
    @Scripts.Render("~/Scripts/common.uploadlist.js")
    @* 來文機關聯動 start*@
    <script src="~/Scripts/bootstrap-typeahead.js"></script>
    @Html.Hidden("GetGovNameUrl", Url.Action("GetGovNameByGoveKind", "Home", new { area = "" }))
    @* 來文機關聯動 end *@

    <script type="text/javascript">
        $(document).ready(function () {
            $("#ddlGOV_KIND").change(function () { changeGovKind(); });
            $.CSFS.bindGovKindAndUnit1("txtGovUnit");
            $("#btnQuery").click(function () { return btnQueryclick(); });
            $("#ddlCaseKind").change(function () { changeCaseKind(); });
            $("#btnNuclear").click(function () { return btnNuclearSubmit() });
            $("#btnReturn").click(function () { return btnReturnSubmit() });
            $("#btnSelectGovUnit").click(function () { return btnSelectGovUnitClick(); });
            $("#btnRemittancer").click(function () { return btnRemittancerSubmit("1") });
            $("#btnExportlist").click(function () { return btnRemittancerSubmit("2") });
            $.CSFS.bindGovKindAndUnit("ddlGOV_KIND", "txtGovUnit");
            if ($("#IsBranchDirector").val() == "0") {
                $("#ddlAgentDepartment2").prop("disabled", "disabled");
                $("#ddlAgentDepartmentUser").prop("disabled", "disabled");
            }
            else {
                $("#ddlAgentDepartmentUser").prop("disabled", "disabled");
            }
            //* 經辦人員
            $("#ddlAgentDepartment").change(function () { changeAgentDepartment(); });
            $("#ddlAgentDepartment2").change(function () { changeAgentDepartment2(); });
            if ($("#isQuery").val() == "1")
            {
                $("#ddlAgentDepartment2").removeAttr("disabled");
                $("#ddlAgentDepartmentUser").removeAttr("disabled");
            }
        });

        if ($("#isQuery").val() == "1") {
            changeCaseKind();
            $("#ddlCaseKind2").removeAttr("disabled");
            $("#pageNum").val(parseInt($("#CurrentPage").val()));
            $("#ddlCaseKind2").val($("#CaseKind2Query").val());
            changeAgentDepartment();
            $("#ddlAgentDepartment2").removeAttr("disabled");
            $("#ddlAgentDepartment2").val($("#AgentDepartment2Query").val());
            changeAgentDepartment2();
            $("#ddlAgentDepartmentUser").removeAttr("disabled");
            $("#ddlAgentDepartmentUser").val($("#AgentDepartmentUserQuery").val());
            btnQueryclick();
        }

        function btnQueryclick() {
            trimAllInput();
            if (!ajaxValidateQuery()) {
                return false;
            } else {
                $.blockUI();
                $.ajax({
                    url: $("#frmQuery").attr("action"),
                    type: "Post",
                    cache: false,
                    data: $("#frmQuery").serialize(),
                    error: function (data) {
                        debugger
                        alert(data);
                        jAlertError($("#LoadErrorMsg").val());
                        $.unblockUI();
                    },
                    success: function (data) {
                        $("#divResult").html(data).show();
                        $("#querystring").val($("#frmQuery").serialize());
                        $.unblockUI();
                    }
                });
            }
        }
        function changeCaseKind() {
            try {
                var selectedValue = $("#ddlCaseKind option:selected").val();
                if (selectedValue === "") {
                    $("#ddlCaseKind2").attr("disabled", "true");
                    $("#ddlCaseKind2").empty();
                    $("#ddlCaseKind2").append($("<option></option>").val("").text($("#PleaseSelect").val()));
                } else {
                    if ($.trim(selectedValue).length > 0) {
                        $.ajax({
                            type: "POST",
                            async: false,
                            url: $("#GetCaseKind2Url").val(),
                            data: { caseKind: selectedValue },
                            success: function (data) {
                                if (data.length > 0) {
                                    $("#ddlCaseKind2").removeAttr("disabled");
                                    $("#ddlCaseKind2").empty();
                                    $("#ddlCaseKind2").append($("<option></option>").val('').text($("#PleaseSelect").val()));
                                    $.each(data, function (i, item) {
                                        $("#ddlCaseKind2").append($("<option></option>").val(item.Value).text(item.Value));
                                    });
                                } else {
                                    $("#ddlCaseKind2").attr("disabled", "true");
                                    $("#ddlCaseKind2").empty();
                                    $("#ddlCaseKind2").append($("<option></option>").val('').text($("#PleaseSelect").val()));
                                }
                            }
                        });
                    }
                }
            }
            catch (e) {
            }
        }
        function changeGovKind() {
            try {
                var selectedValue = $("#ddlGOV_KIND option:selected").val();
                if (selectedValue === "") {
                    $("#ddlGovUnit").attr("disabled", "true");
                    $("#ddlGovUnit").empty();
                    $("#ddlGovUnit").append($("<option></option>").val("").text($("#PleaseSelect").val()));
                } else {
                    if ($.trim(selectedValue).length > 0) {
                        $.ajax({
                            type: "POST",
                            async: false,
                            url: $("#GetGovUnitUrl").val(),
                            data: { govKind: selectedValue },
                            success: function (data) {
                                if (data.length > 0) {
                                    $("#ddlGovUnit").removeAttr("disabled");
                                    $("#ddlGovUnit").empty();
                                    //$("#ddlGovUnit").append($("<option></option>").val('').text('--請選擇--'));
                                    $.each(data, function (i, item) {
                                        $("#ddlGovUnit").append($("<option></option>").val(item.Value).text(item.Value));
                                    });
                                } else {
                                    $("#ddlGovUnit").attr("disabled", "true");
                                    $("#ddlGovUnit").empty();
                                    $("#ddlGovUnit").append($("<option></option>").val('').text($("#PleaseSelect").val()));
                                }
                            }
                        });
                    }
                }
            }
            catch (e) {
            }
        }

        //*匯出/匯出清單
        function btnRemittancerSubmit(value) {
            var CaseIDArr = new Array();
            var CaseIdarr = new Array();
            $(".checkfile").each(function () {
                CaseIDArr.push($(this).val());//向数组中添加元素
            });
            $(".checkfile:checked").each(function () {
                CaseIdarr.push($(this).val());//向数组中添加元素
            });
            var caseid = CaseIdarr.join(',');
            var strCaseId = CaseIDArr.join(',');

            if (value == "1") {
                if (strCaseId.length <= 0) {
                    jAlertError($("#SelectOneMsg").val());
                    return;
                }
                $("#hiddenVal").val("0");
                $("#HistoryQuery").submit();
            } else {
                if (caseid.length <= 0) {
                    jAlertError($("#SelectOneMsg").val());
                    return;
                }
                $("#hiddenVal").val("1");
                $("#hidderid").val(caseid);
                $("#hidGovDates").val($("#txtCreatedDateS").val());
                $("#hidGovDatee").val($("#txtCreatedDateE").val());
                $("#HistoryQuery").submit();

            }
        }

        function btnSelectGovUnitClick() {
            var selectedValue = $("#ddlGovUnit option:selected").val();
            if (selectedValue === "") {
                $("#modalUnits").modal("hide");
            } else {
                $("#GovUnit").val(selectedValue);
                $("#modalUnits").modal("hide");
            }
        }
        //* 經辦人員下拉(處)    
        function changeAgentDepartment() {
            try {
                $("#ddlAgentDepartmentUser").attr("disabled", "true");
                $("#ddlAgentDepartmentUser").empty();
                $("#ddlAgentDepartmentUser").append($("<option></option>").val('').text($("#PleaseSelect").val()));
                var selectedValue = $("#ddlAgentDepartment option:selected").val();
                if (selectedValue === "") {
                    $("#ddlAgentDepartment2").attr("disabled", "true");
                    $("#ddlAgentDepartment2").empty();
                    $("#ddlAgentDepartment2").append($("<option></option>").val("").text($("#PleaseSelect").val()));
                } else {
                    if ($.trim(selectedValue).length > 0) {
                        $.ajax({
                            type: "POST",
                            async: false,
                            url: $("#GetAgentDepartment2Url").val(),
                            data: { AgentDepartment: selectedValue },
                            success: function (data) {
                                if (data.length > 0) {
                                    $("#ddlAgentDepartment2").removeAttr("disabled");
                                    $("#ddlAgentDepartment2").empty();
                                    $("#ddlAgentDepartment2").append($("<option></option>").val('').text($("#PleaseSelect").val()));
                                    $.each(data, function (i, item) {
                                        $("#ddlAgentDepartment2").append($("<option></option>").val(item.Value).text(item.Value));
                                    });
                                } else {
                                    $("#ddlAgentDepartment2").attr("disabled", "true");
                                    $("#ddlAgentDepartment2").empty();
                                    $("#ddlAgentDepartment2").append($("<option></option>").val('').text($("#PleaseSelect").val()));
                                }
                            }
                        });
                    }
                }
            }
            catch (e) {
            }
        }
        //* 經辦人員下拉(科組)
        function changeAgentDepartment2() {
            try {
                //if ($("#IsBranchDirector").val() == "0") {
                    var selectedValue = $("#ddlAgentDepartment2 option:selected").val();
                    if (selectedValue === "") {
                        $("#ddlAgentDepartmentUser").attr("disabled", "true");
                        $("#ddlAgentDepartmentUser").empty();
                        $("#ddlAgentDepartmentUser").append($("<option></option>").val("").text($("#PleaseSelect").val()));
                    } else {
                        if ($.trim(selectedValue).length > 0) {
                            $.ajax({
                                type: "POST",
                                async: false,
                                url: $("#GetAgentDepartmentUserUrl").val(),
                                data: { AgentDepartment: selectedValue },
                                success: function (data) {
                                    if (data.length > 0) {
                                        $("#ddlAgentDepartmentUser").removeAttr("disabled");
                                        $("#ddlAgentDepartmentUser").empty();
                                        $("#ddlAgentDepartmentUser").append($("<option></option>").val('').text($("#PleaseSelect").val()));
                                        $.each(data, function (i, item) {
                                            $("#ddlAgentDepartmentUser").append($("<option></option>").val(item.Value).text(item.Value));
                                        });
                                    } else {
                                        $("#ddlAgentDepartmentUser").attr("disabled", "true");
                                        $("#ddlAgentDepartmentUser").empty();
                                        $("#ddlAgentDepartmentUser").append($("<option></option>").val('').text($("#PleaseSelect").val()));
                                    }
                                }
                            });
                        }
                    }
            }
            catch (e) {
            }
        }
        //20170630 緊急 RQ-2015-019666-018 派件至跨單位 宏祥 add end
        function ajaxValidateQuery() {
            var NewLine = "<br/>";
            var Msg = "";
            if (!checkIsValidDate($("#txtGovDateS").val())) {
                Msg = Msg + $.validator.format($("#PlzCorrectFormat").val(), $("#GovDateText").val()) + NewLine;
            }
            if (!checkIsValidDate($("#txtGovDateE").val())) {
                Msg = Msg + $.validator.format($("#PlzCorrectFormat").val(), $("#GovDateText").val()) + NewLine;
            }
            if (!checkIsValidDate($("#txtCreatedDateS").val())) {
                Msg = Msg + $.validator.format($("#PlzCorrectFormat").val(), $("#CreatedDateText").val()) + NewLine;
            }
            if (!checkIsValidDate($("#txtCreatedDateE").val())) {
                Msg = Msg + $.validator.format($("#PlzCorrectFormat").val(), $("#CreatedDateText").val()) + NewLine;
            }
            if (Msg.length > 0) {
                jAlertError(Msg);
                return false;
            }
            return true;
        }
        function trimAllInput() {
            $(":input[type='text']").each(function () {
                $(this).val($.trim($(this).val()));
            });
        }
    </script>
}


