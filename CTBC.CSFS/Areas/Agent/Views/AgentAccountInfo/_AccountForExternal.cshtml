@model  IList<CTBC.CSFS.Models.CaseAccountExternal>
@using CTBC.FrameWork.Util;

@using (Html.BeginForm("DoSaveAccountForExternal", "AgentAccountInfo", new { area = "Agent" }, FormMethod.Post, new { id = "frmCreate", @class = "form-horizontal" }))
{
    <div>
        <div class="box box-primary">
            <div class="box-header"></div>
            <div class="box-body">
                <table id="query_table" class="table table-bordered table-striped text-black sort">
                    <thead>
                    <tr class="alert-success text-center ">
                        <th class="col-xs-2" rowspan="2" colspan="2">@Lang.csfs_Fees_classification</th>
                        <th class="col-xs-6" rowspan="2">@Lang.csfs_charging_standard</th>
                        <th class="col-xs-1" rowspan="2">@Lang.csfs_UnitPrice</th>
                        <th class="col-xs-3" colspan="3">@Lang.csfs_Fees_detile</th>
                    </tr>
                    <tr class="alert-success text-center ">
                        <th class="col-xs-1">@Lang.csfs_number</th>
                        <th class="col-xs-1">@Lang.csfs_Amount1</th>
                    </tr>
                    </thead>
                    <tbody>
                    @if (Model != null && Model.Any())
                    {
                        int a = 0;
                        for (int i = 0; i < Model.Count; i++)
                        {
                            a++;
                            if (Model[i].UnitPrice != 0)
                            {
                                <tr>
                                    <td class="col-xs-1">
                                        @Model[i].FirstCate
                                        @if (Model[i].FirstCate == "其他")
                                        {
                                            <a onclick=" DeleteOthers(this) ">
                                                @Lang.csfs_delete
                                            </a>
                                        }
                                    </td>
                                    <td class="col-xs-2">@Model[i].SecondCate</td>
                                    <td class="col-xs-6">@Model[i].Description</td>
                                    <td class="col-xs-1 text-right">@UtlString.FormatCurrency(Model[i].UnitPrice, 0) @Html.HiddenFor(m => m[i].UnitPrice, new {@id = "UnitPrice_" + i})</td>
                                    <td class="col-xs-1">@Html.TextBoxFor(m => m[i].Quantity, new {@MaxLength = "10", @class = "col-xs-12 no-padding", @id = "Quantity_" + i, @onblur = "changeQuantity(this);"})</td>
                                    <td class="col-xs-1">
                                        @Html.TextBoxFor(m => m[i].Amount, new {@MaxLength = "10", @class = "col-xs-12 no-padding", @id = "Amount_" + i, @readonly = "readonly"})
                                        @Html.HiddenFor(m => m[i].FirstCate, new {@id = "FirstCate_" + i})
                                        @Html.HiddenFor(m => m[i].SecondCate, new {@id = "SecondCate_" + i})
                                        @Html.HiddenFor(m => m[i].Description, new {@id = "Description_" + i})
                                        @Html.HiddenFor(m => m[i].CaseId, new {@id = "CaseId_" + i})
                                    </td>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <td class="col-xs-1">
                                        @Model[i].FirstCate
                                        @if (Model[i].FirstCate == "其他")
                                        {
                                            <a onclick=" DeleteOthers(this) ">
                                                @Lang.csfs_delete
                                            </a>
                                        }
                                    </td>
                                    <td class="col-xs-2">@Model[i].SecondCate</td>
                                    <td class="col-xs-6">@Model[i].Description</td>
                                    <td class="col-xs-1">@Html.TextBoxFor(m => m[i].UnitPrice, new {@MaxLength = "10", @class = "col-xs-12 no-padding", @id = "UnitPrice_" + i})</td>
                                    <td class="col-xs-1">@Html.TextBoxFor(m => m[i].Quantity, new {@MaxLength = "10", @class = "col-xs-12 no-padding", @id = "Quantity_" + i, @onblur = "changeQuantity(this);"})</td>
                                    <td class="col-xs-1">
                                        @Html.TextBoxFor(m => m[i].Amount, new {@MaxLength = "10", @class = "col-xs-12 no-padding", @id = "Amount_" + i, @readonly = "readonly", onchange = "caclTotal();"})
                                        @Html.HiddenFor(m => m[i].FirstCate, new {@id = "FirstCate_" + i})
                                        @Html.HiddenFor(m => m[i].SecondCate, new {@id = "SecondCate_" + i})
                                        @Html.HiddenFor(m => m[i].Description, new {@id = "Description_" + i})
                                        @Html.HiddenFor(m => m[i].CaseId, new {@id = "CaseId_" + i})
                                    </td>
                                </tr>
                            }
                        }
                        <tr>
                            <th>
                                @Lang.csfs_others
                                <input type="hidden" name="[@a].FirstCate" value="@Lang.csfs_others" id="FirstCate_@a"/>
                            </th>
                            <th>
                                @Lang.csfs_others
                                <input type="hidden" name="[@a].SecondCate" value="@Lang.csfs_others" id="SecondCate_@a"/>
                            </th>
                            <th><input type="text" class="col-xs-12 no-padding" id="Description_@a" name="[@a].Description" value=""/><input type="hidden" name="[@a].CaseId" value="@Model[0].CaseId" id="CaseId_@a"/></th>
                            <th><input type="text" class="col-xs-12 no-padding" id="UnitPrice_@a" name="[@a].UnitPrice" value="0"/></th>
                            <th><input type="text" class="col-xs-12 no-padding" id="Quantity_@a" name="[@a].Quantity" value="0" onblur=" changeQuantity(this); "/></th>
                            <th><input type="text" class="col-xs-12 no-padding" id="Amount_@a" name="[@a].Amount" value="0" readonly="readonly" onchange=" caclTotal(); "/></th>
                        </tr>
                        <tr>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th>@Lang.csfs_Total</th>
                            <th class="col-xs-1"><input type="text" class="col-xs-12 no-padding" id="Sum" readonly="readonly"/></th>
                        </tr>
                    }
                    else
                    {
                        <tr><td colspan="12"><span class="text-red text-center">@Lang.csfs_query_nodata</span></td></tr>
                    }
                    </tbody>
                </table>
                <div class="col-xs-2">@Lang.csfs_receipt</div>
                <input type="text" name="memo" id="memo" maxlength="200" class="col-xs-6 no-padding" value="@ViewBag.Memo">
                <input type="hidden" name="CaseId" id="CaseId" value="@ViewBag.CaseId">
                <br/>
            </div>
            <div class="box-footer text-center">
                @if (Model != null && Model.Any())
                {
                    <button id="btnAccountSave" type="button" class="btn btn-primary btn-xs">@Lang.csfs_save</button>
                }
                <button id="btnAccountPrint" type="button" class="btn btn-default btn-xs">@Lang.csfs_print</button>
            </div>
        </div>
    </div>
}
@Html.Hidden("EditSuccessMsg", Lang.csfs_save_ok)
@Html.Hidden("EditFailMsg", Lang.csfs_save_fail)
@Html.Hidden("ReportUrl", Url.Action("ReportExternal", "AgentAccountInfo", new { area = "Agent" }))

<script src="~/Scripts/jquery-2.1.3.js"></script>
@Html.Hidden("NowPage", "AgentAccountInfo")
<script type="text/javascript">
    $(document).ready(function () {
        caclTotal();
        $("[id^=Quantity]").change(changeQuantity(this));
        $("[id^=Amount]").change(caclTotal());

        $("#btnAccountSave").click(function () { return btnAccountSaveClick(); });
        $("#btnAccountPrint").click(function () { return btnAccountPrintClick(); });
    });

    //*刪除其他
    function DeleteOthers(obj) {
        var objtr = $(obj).parent().parent();
        objtr.remove();
        reCalcTextBox();
    }

    function reCalcTextBox() {
        //* 重新給單價編號
        $("#query_table").find("[id^=UnitPrice]").each(function (i) {
            $(this).attr("id", "UnitPrice_" + i);
            $(this).attr("name", "[" + i + "].UnitPrice");
        });
        $("#query_table").find("[id^=Quantity]").each(function (i) {
            $(this).attr("id", "Quantity_" + i);
            $(this).attr("name", "[" + i + "].Quantity");
        });
        $("#query_table").find("[id^=Amount]").each(function (i) {
            $(this).attr("id", "Amount_" + i);
            $(this).attr("name", "[" + i + "].Amount");
        });
        $("#query_table").find("[id^=FirstCate]").each(function (i) {
            $(this).attr("id", "FirstCate_" + i);
            $(this).attr("name", "[" + i + "].FirstCate");
        });
        $("#query_table").find("[id^=SecondCate]").each(function (i) {
            $(this).attr("id", "SecondCate_" + i);
            $(this).attr("name", "[" + i + "].SecondCate");
        });
        $("#query_table").find("[id^=Description]").each(function (i) {
            $(this).attr("id", "Description_" + i);
            $(this).attr("name", "[" + i + "].Description");
        });
        $("#query_table").find("[id^=CaseId]").each(function (i) {
            $(this).attr("id", "CaseId_" + i);
            $(this).attr("name", "[" + i + "].CaseId");
        });
    }

    //* 計算總金額
    function caclTotal() {
        var total = 0;
        $("[id^=Amount]").each(function (i) {
            total = total + parseInt($(this).val());
        });
        $("#Sum").val(total);
    }

    function changeQuantity(obj) {
        var objtr = $(obj).parent().parent();
        if (objtr.find("[id^=Quantity]").val() != "") {
            objtr.find("[id^=Amount]").val(parseInt(objtr.find("[id^=UnitPrice]").val()) * parseInt(objtr.find("[id^=Quantity]").val()));//*計算改變后的金額
        } else {
            objtr.find("[id^=Amount]").val("0");
        }
        caclTotal();
    }

    //* 儲存
    function btnAccountSaveClick() {
        var msg = "";
        var newline = "<br/>";
        for (var i = 0; i < $("#query_table tbody tr").length - 1; i++) {
            var Filter = /^(0|[1-9]\d*)$/;
            //if ($("#Description_" + i).val() == "") {
            //    continue;
            //}
            if ($("#UnitPrice_" + i).val() != "" && Filter.test($("#UnitPrice_" + i).val()) == false) {
                msg = msg + "@Lang.csfs_Article" + (i + 1) + "@Lang.csfs_pen @Lang.csfs_UnitPrice" + " @Lang.csfs_enter_positiveint" + newline;;
            }
            else if ($("#Quantity_" + i).val() != "" && Filter.test($("#Quantity_" + i).val()) == false) {
                msg = msg + "@Lang.csfs_Article" + (i + 1) + "@Lang.csfs_pen @Lang.csfs_Amount_field" + " @Lang.csfs_enter_positiveint" + newline;;
            }
            @*if (($("#UnitPrice_" + i).val() != "0" || $("#Quantity_" + i).val() != "0") && $("#Description_" + i).val()== "") {
                msg = msg + "@Lang.csfs_Please_enter" + (i + 1) + "@Lang.csfs_pen @Lang.csfs_charging_standard" + newline;
            }*@
            if ($("#Amount_" + i).val() != "0" && $("#Description_" + i).val() == "") {
                msg = msg + "@Lang.csfs_Please_enter" + (i + 1) + "@Lang.csfs_pen @Lang.csfs_charging_standard" + newline;
            }
        }

        if (msg.length > 0) {
            jAlertError(msg);
            return false;
        } else {
            $.ajax({
                url: $("#frmCreate").attr("action"),
                type: "Post",
                cache: false,
                data: $("#frmCreate").serialize(),
                dataType: "json",
                error: function () {
                    jAlertError($("#LoadErrorMsg").val());
                    $.unblockUI();
                },
                success: function (data) {
                    if (data.ReturnCode === "1") {
                        jAlertSuccess($("#EditSuccessMsg").val(), function () { location.href = location.href; });
                    } else {
                        jAlertError($("#EditFailMsg").val());
                        $.unblockUI();
                    }

                }
            });
        }
    }
    //* 列印
    function btnAccountPrintClick() {
        location.href = $("#ReportUrl").val() + "?prCaseId=" + $("#CaseId").val();
    }
</script>